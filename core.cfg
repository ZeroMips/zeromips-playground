SYMBOLS {
	__STACKSIZE__:	type = weak, value = $0800; # 2k C stack
	__STACKSTART__:	type = weak, value = $800;
	__ZPSTART__:	type = weak, value = $0080;
}

MEMORY
{
	ZEROPAGE:	start = $0000, size = $0100;
	VAR:		start = $0200, size = $0100;
	ROM: 		start=$A000, size=$6000, type=ro, define=yes, fill=yes, file=%O;
}

SEGMENTS
{
	ZEROPAGE:	load = ZEROPAGE, type = zp;
	VAR:		load = VAR, type = bss;
	BSS:		load = VAR, type = bss;
	XOBOING:	load=ROM, type=ro;
	INIT:		load=ROM, type=ro;
	XOSERA:		load=ROM, type=ro;
	STARTUP:	load = ROM, type = ro, optional = yes;
	CODE:		load=ROM, type=ro;
	VECTORS:	load=ROM, type=ro, start=$fffa;
}
